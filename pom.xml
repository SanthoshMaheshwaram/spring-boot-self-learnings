<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.7.2</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>org.jangaon</groupId>
	<artifactId>multiModuleProject</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>multiModuleProject</name>
	<url>http://maven.apache.org</url>
	<description>multi module project</description>
	<packaging>pom</packaging>
	<properties>
		<java.version>11</java.version>
	</properties>
	<dependencies>
		<!-- Build web, including RESTFUL, applications using Spring MVC. Uses Apache Tomcat as the default embedded container -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<!-- Provides fast application restarts, LiveReload, and configurations for enhanced development experience -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
		</dependency>
		<!-- Persist data in SQL stores with Java Persistence API using Spring Data and Hibernate, currently this being pulled from parent pom-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<!-- spring boot actuator -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<!-- with combination of actuator, which gives UI feature to see autoconfigure beans -->
		<!-- can we access here in local, http://localhost:8085/browser/index.html#/ -->
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-rest-hal-browser</artifactId>
			<version>3.3.9.RELEASE</version>
		</dependency>
		<!-- spring boot security, also required for manual actuator configurations-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-aop</artifactId>
		</dependency>
		<!-- Store data in flexible, JSON-like documents, meaning fields can vary from document to document and data structure can be changed over time -->
		<!--		<dependency>-->
		<!--			<groupId>org.springframework.boot</groupId>-->
		<!--			<artifactId>spring-boot-starter-data-mongodb</artifactId>-->
		<!--		</dependency>-->
		<!-- Spring boot starter test, that pulls are unit test dependencies required, -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope> <!--It means when the application is bundled and packaged for deployment, any dependency that is declared with the test scopes is ignored. The test scope dependencies are only available when running in the development and Maven test modes. -->
		</dependency>
		<!-- Working with MS-SQL data source -->
		<dependency>
			<groupId>com.microsoft.sqlserver</groupId>
			<artifactId>mssql-jdbc</artifactId>
			<scope>runtime</scope>
		</dependency>
	</dependencies>
	<modules>
		<module>family-friends-service</module>
	</modules>
	<repositories>
		<!-- LOCAL, REMOTE, CENTRAL -->
		<!--maven first downloads/fetches form local, if not found in local, it will search in central through internet connection-->
		<!--maven first downloads/fetches form local, if not found in local, it will search in remote if any remote is mentioned, if not found goes to central-->

		<repository>
			<id>spring-milestones</id>
			<name>Spring Milestones</name>
			<url>https://repo.spring.io/milestone</url>
		</repository>
		<repository>
			<id>spring-snapshots</id>
			<name>Spring Snapshots</name>
			<url>https://repo.spring.io/snapshot</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
	</repositories>

	<build>
		<plugins>
			<plugin>
				<!-- To tell Maven to build an executable jar for this project -->
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId> <!-- this line was in red-color until I added below line and removed -->
			</plugin>
		</plugins>
	</build>
</project>
